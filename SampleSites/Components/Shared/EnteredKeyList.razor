<div class="entered-keys">
    <table>
        <thead>
            <tr>
                <th>ModKeys</th>
                <th>Key</th>
                <th>Code</th>
                <th>Repeat</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var enteredKey in EnteredKeys)
            {
                <tr @key="enteredKey.Id">
                    <td>@(enteredKey.Modifiers == ModCodes.None ? "" : enteredKey.Modifiers.ToString())</td>
                    <td>@enteredKey.Key</td>
                    <td>@enteredKey.Code</td>
                    <td>x @enteredKey.RepeatCount</td>
                </tr>
            }
        </tbody>
    </table>
</div>

@code {
    private readonly List<EnteredKey> EnteredKeys = new List<EnteredKey>();

    private EnteredKey LastEnteredKey = null;

    public void OnEnteredKey(HotKeyEntryByKey hotKeyEntry)
    {
        OnEnteredKey(new EnteredKey(hotKeyEntry.Modifiers, hotKeyEntry.Key));
    }

    public void OnEnteredKey(HotKeyDownEventArgs e)
    {
        OnEnteredKey(new EnteredKey(e.Modifiers, e.Key, e.Code));
    }

    public void OnEnteredKey(EnteredKey enteredKey)
    {
        if (LastEnteredKey == enteredKey)
        {
            LastEnteredKey.RepeatCount++;
        }
        else
        {
            LastEnteredKey = enteredKey;
            EnteredKeys.Insert(0, enteredKey);
            if (EnteredKeys.Count > 10) EnteredKeys.RemoveAt(10);
        }
        this.StateHasChanged();
    }

}